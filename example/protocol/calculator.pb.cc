// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: calculator.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "calculator.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Calculator {

namespace {

const ::google::protobuf::Descriptor* AddRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* SubRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SubResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* MulRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MulRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MulResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MulResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* DivRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DivRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* DivResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DivResult_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_calculator_2eproto() {
  protobuf_AddDesc_calculator_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "calculator.proto");
  GOOGLE_CHECK(file != NULL);
  AddRequest_descriptor_ = file->message_type(0);
  static const int AddRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRequest, lhs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRequest, rhs_),
  };
  AddRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AddRequest_descriptor_,
      AddRequest::default_instance_,
      AddRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(AddRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRequest, _is_default_instance_));
  AddResult_descriptor_ = file->message_type(1);
  static const int AddResult_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddResult, value_),
  };
  AddResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AddResult_descriptor_,
      AddResult::default_instance_,
      AddResult_offsets_,
      -1,
      -1,
      -1,
      sizeof(AddResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddResult, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddResult, _is_default_instance_));
  SubRequest_descriptor_ = file->message_type(2);
  static const int SubRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubRequest, lhs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubRequest, rhs_),
  };
  SubRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SubRequest_descriptor_,
      SubRequest::default_instance_,
      SubRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(SubRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubRequest, _is_default_instance_));
  SubResult_descriptor_ = file->message_type(3);
  static const int SubResult_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubResult, value_),
  };
  SubResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SubResult_descriptor_,
      SubResult::default_instance_,
      SubResult_offsets_,
      -1,
      -1,
      -1,
      sizeof(SubResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubResult, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubResult, _is_default_instance_));
  MulRequest_descriptor_ = file->message_type(4);
  static const int MulRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MulRequest, lhs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MulRequest, rhs_),
  };
  MulRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MulRequest_descriptor_,
      MulRequest::default_instance_,
      MulRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(MulRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MulRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MulRequest, _is_default_instance_));
  MulResult_descriptor_ = file->message_type(5);
  static const int MulResult_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MulResult, value_),
  };
  MulResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MulResult_descriptor_,
      MulResult::default_instance_,
      MulResult_offsets_,
      -1,
      -1,
      -1,
      sizeof(MulResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MulResult, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MulResult, _is_default_instance_));
  DivRequest_descriptor_ = file->message_type(6);
  static const int DivRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DivRequest, lhs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DivRequest, rhs_),
  };
  DivRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DivRequest_descriptor_,
      DivRequest::default_instance_,
      DivRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(DivRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DivRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DivRequest, _is_default_instance_));
  DivResult_descriptor_ = file->message_type(7);
  static const int DivResult_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DivResult, value_),
  };
  DivResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DivResult_descriptor_,
      DivResult::default_instance_,
      DivResult_offsets_,
      -1,
      -1,
      -1,
      sizeof(DivResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DivResult, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DivResult, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_calculator_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AddRequest_descriptor_, &AddRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AddResult_descriptor_, &AddResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SubRequest_descriptor_, &SubRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SubResult_descriptor_, &SubResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MulRequest_descriptor_, &MulRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MulResult_descriptor_, &MulResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DivRequest_descriptor_, &DivRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DivResult_descriptor_, &DivResult::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_calculator_2eproto() {
  delete AddRequest::default_instance_;
  delete AddRequest_reflection_;
  delete AddResult::default_instance_;
  delete AddResult_reflection_;
  delete SubRequest::default_instance_;
  delete SubRequest_reflection_;
  delete SubResult::default_instance_;
  delete SubResult_reflection_;
  delete MulRequest::default_instance_;
  delete MulRequest_reflection_;
  delete MulResult::default_instance_;
  delete MulResult_reflection_;
  delete DivRequest::default_instance_;
  delete DivRequest_reflection_;
  delete DivResult::default_instance_;
  delete DivResult_reflection_;
}

void protobuf_AddDesc_calculator_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020calculator.proto\022\nCalculator\"&\n\nAddReq"
    "uest\022\013\n\003lhs\030\001 \001(\005\022\013\n\003rhs\030\002 \001(\005\"\032\n\tAddRes"
    "ult\022\r\n\005value\030\001 \001(\005\"&\n\nSubRequest\022\013\n\003lhs\030"
    "\001 \001(\005\022\013\n\003rhs\030\002 \001(\005\"\032\n\tSubResult\022\r\n\005value"
    "\030\001 \001(\005\"&\n\nMulRequest\022\013\n\003lhs\030\001 \001(\005\022\013\n\003rhs"
    "\030\002 \001(\005\"\032\n\tMulResult\022\r\n\005value\030\001 \001(\005\"&\n\nDi"
    "vRequest\022\013\n\003lhs\030\001 \001(\005\022\013\n\003rhs\030\002 \001(\005\"\032\n\tDi"
    "vResult\022\r\n\005value\030\001 \001(\0052\341\001\n\007Service\0224\n\003ad"
    "d\022\026.Calculator.AddRequest\032\025.Calculator.A"
    "ddResult\0224\n\003sub\022\026.Calculator.SubRequest\032"
    "\025.Calculator.SubResult\0224\n\003mul\022\026.Calculat"
    "or.MulRequest\032\025.Calculator.MulResult\0224\n\003"
    "div\022\026.Calculator.DivRequest\032\025.Calculator"
    ".DivResultb\006proto3", 538);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "calculator.proto", &protobuf_RegisterTypes);
  AddRequest::default_instance_ = new AddRequest();
  AddResult::default_instance_ = new AddResult();
  SubRequest::default_instance_ = new SubRequest();
  SubResult::default_instance_ = new SubResult();
  MulRequest::default_instance_ = new MulRequest();
  MulResult::default_instance_ = new MulResult();
  DivRequest::default_instance_ = new DivRequest();
  DivResult::default_instance_ = new DivResult();
  AddRequest::default_instance_->InitAsDefaultInstance();
  AddResult::default_instance_->InitAsDefaultInstance();
  SubRequest::default_instance_->InitAsDefaultInstance();
  SubResult::default_instance_->InitAsDefaultInstance();
  MulRequest::default_instance_->InitAsDefaultInstance();
  MulResult::default_instance_->InitAsDefaultInstance();
  DivRequest::default_instance_->InitAsDefaultInstance();
  DivResult::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_calculator_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_calculator_2eproto {
  StaticDescriptorInitializer_calculator_2eproto() {
    protobuf_AddDesc_calculator_2eproto();
  }
} static_descriptor_initializer_calculator_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int AddRequest::kLhsFieldNumber;
const int AddRequest::kRhsFieldNumber;
#endif  // !_MSC_VER

AddRequest::AddRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calculator.AddRequest)
}

void AddRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AddRequest::AddRequest(const AddRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Calculator.AddRequest)
}

void AddRequest::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  lhs_ = 0;
  rhs_ = 0;
}

AddRequest::~AddRequest() {
  // @@protoc_insertion_point(destructor:Calculator.AddRequest)
  SharedDtor();
}

void AddRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AddRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddRequest_descriptor_;
}

const AddRequest& AddRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_calculator_2eproto();
  return *default_instance_;
}

AddRequest* AddRequest::default_instance_ = NULL;

AddRequest* AddRequest::New(::google::protobuf::Arena* arena) const {
  AddRequest* n = new AddRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddRequest::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AddRequest*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(lhs_, rhs_);

#undef ZR_HELPER_
#undef ZR_

}

bool AddRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Calculator.AddRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 lhs = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lhs_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_rhs;
        break;
      }

      // optional int32 rhs = 2;
      case 2: {
        if (tag == 16) {
         parse_rhs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rhs_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calculator.AddRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calculator.AddRequest)
  return false;
#undef DO_
}

void AddRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calculator.AddRequest)
  // optional int32 lhs = 1;
  if (this->lhs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lhs(), output);
  }

  // optional int32 rhs = 2;
  if (this->rhs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rhs(), output);
  }

  // @@protoc_insertion_point(serialize_end:Calculator.AddRequest)
}

::google::protobuf::uint8* AddRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Calculator.AddRequest)
  // optional int32 lhs = 1;
  if (this->lhs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lhs(), target);
  }

  // optional int32 rhs = 2;
  if (this->rhs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rhs(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Calculator.AddRequest)
  return target;
}

int AddRequest::ByteSize() const {
  int total_size = 0;

  // optional int32 lhs = 1;
  if (this->lhs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lhs());
  }

  // optional int32 rhs = 2;
  if (this->rhs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rhs());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddRequest::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AddRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AddRequest>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AddRequest::MergeFrom(const AddRequest& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.lhs() != 0) {
    set_lhs(from.lhs());
  }
  if (from.rhs() != 0) {
    set_rhs(from.rhs());
  }
}

void AddRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddRequest::CopyFrom(const AddRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddRequest::IsInitialized() const {

  return true;
}

void AddRequest::Swap(AddRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddRequest::InternalSwap(AddRequest* other) {
  std::swap(lhs_, other->lhs_);
  std::swap(rhs_, other->rhs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddRequest_descriptor_;
  metadata.reflection = AddRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddRequest

// optional int32 lhs = 1;
void AddRequest::clear_lhs() {
  lhs_ = 0;
}
 ::google::protobuf::int32 AddRequest::lhs() const {
  // @@protoc_insertion_point(field_get:Calculator.AddRequest.lhs)
  return lhs_;
}
 void AddRequest::set_lhs(::google::protobuf::int32 value) {
  
  lhs_ = value;
  // @@protoc_insertion_point(field_set:Calculator.AddRequest.lhs)
}

// optional int32 rhs = 2;
void AddRequest::clear_rhs() {
  rhs_ = 0;
}
 ::google::protobuf::int32 AddRequest::rhs() const {
  // @@protoc_insertion_point(field_get:Calculator.AddRequest.rhs)
  return rhs_;
}
 void AddRequest::set_rhs(::google::protobuf::int32 value) {
  
  rhs_ = value;
  // @@protoc_insertion_point(field_set:Calculator.AddRequest.rhs)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int AddResult::kValueFieldNumber;
#endif  // !_MSC_VER

AddResult::AddResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calculator.AddResult)
}

void AddResult::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AddResult::AddResult(const AddResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Calculator.AddResult)
}

void AddResult::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  value_ = 0;
}

AddResult::~AddResult() {
  // @@protoc_insertion_point(destructor:Calculator.AddResult)
  SharedDtor();
}

void AddResult::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AddResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddResult_descriptor_;
}

const AddResult& AddResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_calculator_2eproto();
  return *default_instance_;
}

AddResult* AddResult::default_instance_ = NULL;

AddResult* AddResult::New(::google::protobuf::Arena* arena) const {
  AddResult* n = new AddResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddResult::Clear() {
  value_ = 0;
}

bool AddResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Calculator.AddResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 value = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calculator.AddResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calculator.AddResult)
  return false;
#undef DO_
}

void AddResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calculator.AddResult)
  // optional int32 value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:Calculator.AddResult)
}

::google::protobuf::uint8* AddResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Calculator.AddResult)
  // optional int32 value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Calculator.AddResult)
  return target;
}

int AddResult::ByteSize() const {
  int total_size = 0;

  // optional int32 value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddResult::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AddResult* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AddResult>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AddResult::MergeFrom(const AddResult& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void AddResult::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddResult::CopyFrom(const AddResult& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddResult::IsInitialized() const {

  return true;
}

void AddResult::Swap(AddResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddResult::InternalSwap(AddResult* other) {
  std::swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddResult_descriptor_;
  metadata.reflection = AddResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddResult

// optional int32 value = 1;
void AddResult::clear_value() {
  value_ = 0;
}
 ::google::protobuf::int32 AddResult::value() const {
  // @@protoc_insertion_point(field_get:Calculator.AddResult.value)
  return value_;
}
 void AddResult::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:Calculator.AddResult.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int SubRequest::kLhsFieldNumber;
const int SubRequest::kRhsFieldNumber;
#endif  // !_MSC_VER

SubRequest::SubRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calculator.SubRequest)
}

void SubRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SubRequest::SubRequest(const SubRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Calculator.SubRequest)
}

void SubRequest::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  lhs_ = 0;
  rhs_ = 0;
}

SubRequest::~SubRequest() {
  // @@protoc_insertion_point(destructor:Calculator.SubRequest)
  SharedDtor();
}

void SubRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SubRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubRequest_descriptor_;
}

const SubRequest& SubRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_calculator_2eproto();
  return *default_instance_;
}

SubRequest* SubRequest::default_instance_ = NULL;

SubRequest* SubRequest::New(::google::protobuf::Arena* arena) const {
  SubRequest* n = new SubRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubRequest::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SubRequest*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(lhs_, rhs_);

#undef ZR_HELPER_
#undef ZR_

}

bool SubRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Calculator.SubRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 lhs = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lhs_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_rhs;
        break;
      }

      // optional int32 rhs = 2;
      case 2: {
        if (tag == 16) {
         parse_rhs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rhs_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calculator.SubRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calculator.SubRequest)
  return false;
#undef DO_
}

void SubRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calculator.SubRequest)
  // optional int32 lhs = 1;
  if (this->lhs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lhs(), output);
  }

  // optional int32 rhs = 2;
  if (this->rhs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rhs(), output);
  }

  // @@protoc_insertion_point(serialize_end:Calculator.SubRequest)
}

::google::protobuf::uint8* SubRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Calculator.SubRequest)
  // optional int32 lhs = 1;
  if (this->lhs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lhs(), target);
  }

  // optional int32 rhs = 2;
  if (this->rhs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rhs(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Calculator.SubRequest)
  return target;
}

int SubRequest::ByteSize() const {
  int total_size = 0;

  // optional int32 lhs = 1;
  if (this->lhs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lhs());
  }

  // optional int32 rhs = 2;
  if (this->rhs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rhs());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubRequest::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SubRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SubRequest>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SubRequest::MergeFrom(const SubRequest& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.lhs() != 0) {
    set_lhs(from.lhs());
  }
  if (from.rhs() != 0) {
    set_rhs(from.rhs());
  }
}

void SubRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubRequest::CopyFrom(const SubRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubRequest::IsInitialized() const {

  return true;
}

void SubRequest::Swap(SubRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubRequest::InternalSwap(SubRequest* other) {
  std::swap(lhs_, other->lhs_);
  std::swap(rhs_, other->rhs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubRequest_descriptor_;
  metadata.reflection = SubRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubRequest

// optional int32 lhs = 1;
void SubRequest::clear_lhs() {
  lhs_ = 0;
}
 ::google::protobuf::int32 SubRequest::lhs() const {
  // @@protoc_insertion_point(field_get:Calculator.SubRequest.lhs)
  return lhs_;
}
 void SubRequest::set_lhs(::google::protobuf::int32 value) {
  
  lhs_ = value;
  // @@protoc_insertion_point(field_set:Calculator.SubRequest.lhs)
}

// optional int32 rhs = 2;
void SubRequest::clear_rhs() {
  rhs_ = 0;
}
 ::google::protobuf::int32 SubRequest::rhs() const {
  // @@protoc_insertion_point(field_get:Calculator.SubRequest.rhs)
  return rhs_;
}
 void SubRequest::set_rhs(::google::protobuf::int32 value) {
  
  rhs_ = value;
  // @@protoc_insertion_point(field_set:Calculator.SubRequest.rhs)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int SubResult::kValueFieldNumber;
#endif  // !_MSC_VER

SubResult::SubResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calculator.SubResult)
}

void SubResult::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SubResult::SubResult(const SubResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Calculator.SubResult)
}

void SubResult::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  value_ = 0;
}

SubResult::~SubResult() {
  // @@protoc_insertion_point(destructor:Calculator.SubResult)
  SharedDtor();
}

void SubResult::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SubResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubResult_descriptor_;
}

const SubResult& SubResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_calculator_2eproto();
  return *default_instance_;
}

SubResult* SubResult::default_instance_ = NULL;

SubResult* SubResult::New(::google::protobuf::Arena* arena) const {
  SubResult* n = new SubResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubResult::Clear() {
  value_ = 0;
}

bool SubResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Calculator.SubResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 value = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calculator.SubResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calculator.SubResult)
  return false;
#undef DO_
}

void SubResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calculator.SubResult)
  // optional int32 value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:Calculator.SubResult)
}

::google::protobuf::uint8* SubResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Calculator.SubResult)
  // optional int32 value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Calculator.SubResult)
  return target;
}

int SubResult::ByteSize() const {
  int total_size = 0;

  // optional int32 value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubResult::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SubResult* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SubResult>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SubResult::MergeFrom(const SubResult& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void SubResult::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubResult::CopyFrom(const SubResult& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubResult::IsInitialized() const {

  return true;
}

void SubResult::Swap(SubResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubResult::InternalSwap(SubResult* other) {
  std::swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubResult_descriptor_;
  metadata.reflection = SubResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubResult

// optional int32 value = 1;
void SubResult::clear_value() {
  value_ = 0;
}
 ::google::protobuf::int32 SubResult::value() const {
  // @@protoc_insertion_point(field_get:Calculator.SubResult.value)
  return value_;
}
 void SubResult::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:Calculator.SubResult.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MulRequest::kLhsFieldNumber;
const int MulRequest::kRhsFieldNumber;
#endif  // !_MSC_VER

MulRequest::MulRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calculator.MulRequest)
}

void MulRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MulRequest::MulRequest(const MulRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Calculator.MulRequest)
}

void MulRequest::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  lhs_ = 0;
  rhs_ = 0;
}

MulRequest::~MulRequest() {
  // @@protoc_insertion_point(destructor:Calculator.MulRequest)
  SharedDtor();
}

void MulRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MulRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MulRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MulRequest_descriptor_;
}

const MulRequest& MulRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_calculator_2eproto();
  return *default_instance_;
}

MulRequest* MulRequest::default_instance_ = NULL;

MulRequest* MulRequest::New(::google::protobuf::Arena* arena) const {
  MulRequest* n = new MulRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MulRequest::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MulRequest*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(lhs_, rhs_);

#undef ZR_HELPER_
#undef ZR_

}

bool MulRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Calculator.MulRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 lhs = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lhs_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_rhs;
        break;
      }

      // optional int32 rhs = 2;
      case 2: {
        if (tag == 16) {
         parse_rhs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rhs_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calculator.MulRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calculator.MulRequest)
  return false;
#undef DO_
}

void MulRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calculator.MulRequest)
  // optional int32 lhs = 1;
  if (this->lhs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lhs(), output);
  }

  // optional int32 rhs = 2;
  if (this->rhs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rhs(), output);
  }

  // @@protoc_insertion_point(serialize_end:Calculator.MulRequest)
}

::google::protobuf::uint8* MulRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Calculator.MulRequest)
  // optional int32 lhs = 1;
  if (this->lhs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lhs(), target);
  }

  // optional int32 rhs = 2;
  if (this->rhs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rhs(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Calculator.MulRequest)
  return target;
}

int MulRequest::ByteSize() const {
  int total_size = 0;

  // optional int32 lhs = 1;
  if (this->lhs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lhs());
  }

  // optional int32 rhs = 2;
  if (this->rhs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rhs());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MulRequest::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MulRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MulRequest>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MulRequest::MergeFrom(const MulRequest& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.lhs() != 0) {
    set_lhs(from.lhs());
  }
  if (from.rhs() != 0) {
    set_rhs(from.rhs());
  }
}

void MulRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MulRequest::CopyFrom(const MulRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MulRequest::IsInitialized() const {

  return true;
}

void MulRequest::Swap(MulRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MulRequest::InternalSwap(MulRequest* other) {
  std::swap(lhs_, other->lhs_);
  std::swap(rhs_, other->rhs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MulRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MulRequest_descriptor_;
  metadata.reflection = MulRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MulRequest

// optional int32 lhs = 1;
void MulRequest::clear_lhs() {
  lhs_ = 0;
}
 ::google::protobuf::int32 MulRequest::lhs() const {
  // @@protoc_insertion_point(field_get:Calculator.MulRequest.lhs)
  return lhs_;
}
 void MulRequest::set_lhs(::google::protobuf::int32 value) {
  
  lhs_ = value;
  // @@protoc_insertion_point(field_set:Calculator.MulRequest.lhs)
}

// optional int32 rhs = 2;
void MulRequest::clear_rhs() {
  rhs_ = 0;
}
 ::google::protobuf::int32 MulRequest::rhs() const {
  // @@protoc_insertion_point(field_get:Calculator.MulRequest.rhs)
  return rhs_;
}
 void MulRequest::set_rhs(::google::protobuf::int32 value) {
  
  rhs_ = value;
  // @@protoc_insertion_point(field_set:Calculator.MulRequest.rhs)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MulResult::kValueFieldNumber;
#endif  // !_MSC_VER

MulResult::MulResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calculator.MulResult)
}

void MulResult::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MulResult::MulResult(const MulResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Calculator.MulResult)
}

void MulResult::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  value_ = 0;
}

MulResult::~MulResult() {
  // @@protoc_insertion_point(destructor:Calculator.MulResult)
  SharedDtor();
}

void MulResult::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MulResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MulResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MulResult_descriptor_;
}

const MulResult& MulResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_calculator_2eproto();
  return *default_instance_;
}

MulResult* MulResult::default_instance_ = NULL;

MulResult* MulResult::New(::google::protobuf::Arena* arena) const {
  MulResult* n = new MulResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MulResult::Clear() {
  value_ = 0;
}

bool MulResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Calculator.MulResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 value = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calculator.MulResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calculator.MulResult)
  return false;
#undef DO_
}

void MulResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calculator.MulResult)
  // optional int32 value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:Calculator.MulResult)
}

::google::protobuf::uint8* MulResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Calculator.MulResult)
  // optional int32 value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Calculator.MulResult)
  return target;
}

int MulResult::ByteSize() const {
  int total_size = 0;

  // optional int32 value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MulResult::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MulResult* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MulResult>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MulResult::MergeFrom(const MulResult& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void MulResult::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MulResult::CopyFrom(const MulResult& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MulResult::IsInitialized() const {

  return true;
}

void MulResult::Swap(MulResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MulResult::InternalSwap(MulResult* other) {
  std::swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MulResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MulResult_descriptor_;
  metadata.reflection = MulResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MulResult

// optional int32 value = 1;
void MulResult::clear_value() {
  value_ = 0;
}
 ::google::protobuf::int32 MulResult::value() const {
  // @@protoc_insertion_point(field_get:Calculator.MulResult.value)
  return value_;
}
 void MulResult::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:Calculator.MulResult.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int DivRequest::kLhsFieldNumber;
const int DivRequest::kRhsFieldNumber;
#endif  // !_MSC_VER

DivRequest::DivRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calculator.DivRequest)
}

void DivRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DivRequest::DivRequest(const DivRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Calculator.DivRequest)
}

void DivRequest::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  lhs_ = 0;
  rhs_ = 0;
}

DivRequest::~DivRequest() {
  // @@protoc_insertion_point(destructor:Calculator.DivRequest)
  SharedDtor();
}

void DivRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DivRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DivRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DivRequest_descriptor_;
}

const DivRequest& DivRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_calculator_2eproto();
  return *default_instance_;
}

DivRequest* DivRequest::default_instance_ = NULL;

DivRequest* DivRequest::New(::google::protobuf::Arena* arena) const {
  DivRequest* n = new DivRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DivRequest::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DivRequest*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(lhs_, rhs_);

#undef ZR_HELPER_
#undef ZR_

}

bool DivRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Calculator.DivRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 lhs = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lhs_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_rhs;
        break;
      }

      // optional int32 rhs = 2;
      case 2: {
        if (tag == 16) {
         parse_rhs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rhs_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calculator.DivRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calculator.DivRequest)
  return false;
#undef DO_
}

void DivRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calculator.DivRequest)
  // optional int32 lhs = 1;
  if (this->lhs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lhs(), output);
  }

  // optional int32 rhs = 2;
  if (this->rhs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rhs(), output);
  }

  // @@protoc_insertion_point(serialize_end:Calculator.DivRequest)
}

::google::protobuf::uint8* DivRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Calculator.DivRequest)
  // optional int32 lhs = 1;
  if (this->lhs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lhs(), target);
  }

  // optional int32 rhs = 2;
  if (this->rhs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rhs(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Calculator.DivRequest)
  return target;
}

int DivRequest::ByteSize() const {
  int total_size = 0;

  // optional int32 lhs = 1;
  if (this->lhs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lhs());
  }

  // optional int32 rhs = 2;
  if (this->rhs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rhs());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DivRequest::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DivRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DivRequest>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DivRequest::MergeFrom(const DivRequest& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.lhs() != 0) {
    set_lhs(from.lhs());
  }
  if (from.rhs() != 0) {
    set_rhs(from.rhs());
  }
}

void DivRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DivRequest::CopyFrom(const DivRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DivRequest::IsInitialized() const {

  return true;
}

void DivRequest::Swap(DivRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DivRequest::InternalSwap(DivRequest* other) {
  std::swap(lhs_, other->lhs_);
  std::swap(rhs_, other->rhs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DivRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DivRequest_descriptor_;
  metadata.reflection = DivRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DivRequest

// optional int32 lhs = 1;
void DivRequest::clear_lhs() {
  lhs_ = 0;
}
 ::google::protobuf::int32 DivRequest::lhs() const {
  // @@protoc_insertion_point(field_get:Calculator.DivRequest.lhs)
  return lhs_;
}
 void DivRequest::set_lhs(::google::protobuf::int32 value) {
  
  lhs_ = value;
  // @@protoc_insertion_point(field_set:Calculator.DivRequest.lhs)
}

// optional int32 rhs = 2;
void DivRequest::clear_rhs() {
  rhs_ = 0;
}
 ::google::protobuf::int32 DivRequest::rhs() const {
  // @@protoc_insertion_point(field_get:Calculator.DivRequest.rhs)
  return rhs_;
}
 void DivRequest::set_rhs(::google::protobuf::int32 value) {
  
  rhs_ = value;
  // @@protoc_insertion_point(field_set:Calculator.DivRequest.rhs)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int DivResult::kValueFieldNumber;
#endif  // !_MSC_VER

DivResult::DivResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Calculator.DivResult)
}

void DivResult::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DivResult::DivResult(const DivResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Calculator.DivResult)
}

void DivResult::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  value_ = 0;
}

DivResult::~DivResult() {
  // @@protoc_insertion_point(destructor:Calculator.DivResult)
  SharedDtor();
}

void DivResult::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DivResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DivResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DivResult_descriptor_;
}

const DivResult& DivResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_calculator_2eproto();
  return *default_instance_;
}

DivResult* DivResult::default_instance_ = NULL;

DivResult* DivResult::New(::google::protobuf::Arena* arena) const {
  DivResult* n = new DivResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DivResult::Clear() {
  value_ = 0;
}

bool DivResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Calculator.DivResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 value = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Calculator.DivResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Calculator.DivResult)
  return false;
#undef DO_
}

void DivResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Calculator.DivResult)
  // optional int32 value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:Calculator.DivResult)
}

::google::protobuf::uint8* DivResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Calculator.DivResult)
  // optional int32 value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Calculator.DivResult)
  return target;
}

int DivResult::ByteSize() const {
  int total_size = 0;

  // optional int32 value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DivResult::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DivResult* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DivResult>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DivResult::MergeFrom(const DivResult& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void DivResult::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DivResult::CopyFrom(const DivResult& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DivResult::IsInitialized() const {

  return true;
}

void DivResult::Swap(DivResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DivResult::InternalSwap(DivResult* other) {
  std::swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DivResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DivResult_descriptor_;
  metadata.reflection = DivResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DivResult

// optional int32 value = 1;
void DivResult::clear_value() {
  value_ = 0;
}
 ::google::protobuf::int32 DivResult::value() const {
  // @@protoc_insertion_point(field_get:Calculator.DivResult.value)
  return value_;
}
 void DivResult::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:Calculator.DivResult.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Calculator

// @@protoc_insertion_point(global_scope)
